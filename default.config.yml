---
downloads: ~/.ansible-downloads/

configure_python: true
configure_dotfiles: true
configure_terminal: true
configure_osx: false
configure_sublime: false

# Set to 'true' to configure the Dock via dockutil.
configure_dock: true
dockitems_remove:
  - Launchpad
  - TV
  - Podcasts
  - 'App Store'
  - FaceTime
  - Calendar
  - Contacts
  - Notes
  - Reminders
  - News
  - Maps
  - Mail
dockitems_persist:
  - name: "Visual Studio Code"
    path: "/Applications/Visual Studio Code.app/"
  - name: "Notion"
    path: "/Applications/Notion.app/"
  - name: "Zoom"
    path: "/Applications/zoom.app/"
  - name: "Postman"
    path: "/Applications/Postman.app/"
  - name: "Docker"
    path: "/Applications/Docker.app/"
  - name: "Google Chrome"
    path: "/Applications/Google Chrome.app/"
#   pos: 5

configure_sudoers: false
sudoers_custom_config: ''
# Example:
# sudoers_custom_config: |
#   # Allow users in admin group to use sudo with no password.
#   %admin ALL=(ALL) NOPASSWD: ALL

dotfiles_repo: https://github.com/geerlingguy/dotfiles.git
dotfiles_repo_accept_hostkey: true
dotfiles_repo_local_destination: ~/Development/GitHub/dotfiles
dotfiles_files:
  - .zshrc
  - .gitignore
  - .inputrc
  - .osx
  - .vimrc

homebrew_installed_packages:
  # - ansible # Installed via Pip.
  - autoconf
  - bash-completion
  - cowsay
  - doxygen
  - gettext
  - gifsicle
  - git
  - github/gh/gh
  - go
  - gpg
  - httpie
  - iperf
  - libevent
  - libffi
  - mcrypt
  - neovim
  - nmap
  - node
  - nvm
  - openblas
  - openssl
  - php
  - pkg-config
  - pv
  - readline
  - sqlite
  - ssh-copy-id
  - wget
  - wrk
  - xz
  - zlib
  - zsh-history-substring-search
  - { name: libpq, install_options: build-from-source }


homebrew_taps:
  - homebrew/core
  - homebrew/cask

homebrew_cask_appdir: /Applications
homebrew_cask_apps:
  - chromedriver
  - docker
  - dropbox
  - firefox
  - google-chrome
  - licecap
  - moom
  - notion
  - postman
  - sequel-ace
  - slack
  - visual-studio-code
  - zoom

# See `geerlingguy.mas` role documentation for usage instructions.
mas_installed_apps: []
mas_email: ""
mas_password: ""

osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages: []
# - name: drush
#   state: present # present/absent, default: present
#   version: "^8.1" # default: N/A
gem_packages: []
# - name: bundler
#   state: present # present/absent/latest, default: present
#   version: "~> 1.15.1" # default: N/A
npm_packages: []
# - name: webpack
#   state: present # present/absent/latest, default: present
#   version: "^2.6" # default: N/A
pip_packages: []
# - name: mkdocs
#   state: present # present/absent/latest, default: present
#   version: "0.16.3" # default: N/A

# Set to 'true' to configure Sublime Text.
configure_sublime: false
sublime_base_path: '~/Library/Application Support/Sublime Text'
sublime_config_path: "Packages/User"
sublime_package_control:
  - "DocBlockr"
  - "Dockerfile Syntax Highlighting"
  - "FileDiffs"
  - "GitHub Flavored Markdown Preview"
  - "Jinja2"
  - "Package Control"
  - "PHP-Twig"
  - "Pretty JSON"
  - "SublimeLinter"
  - "SublimeLinter-contrib-yamllint"
  - "TrailingSpaces"
  - "WordCount"

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: []

# ----- For python configuration -----
pyenv_install_from_package_manager: true
pyenv_python27_version: "2.7.18"
pyenv_python37_version: "3.7.13"
pyenv_python38_version: "3.8.13"
pyenv_python39_version: "3.9.11"
pyenv_python310_version: "3.10.3"
pyenv_python_versions:
  - "{{ pyenv_python27_version }}"
  - "{{ pyenv_python37_version }}"
  - "{{ pyenv_python38_version }}"
  - "{{ pyenv_python39_version }}"
  - "{{ pyenv_python310_version }}"

brew_bin_path: "{{ brew_prefix }}/bin"
brew_prefix: "{{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}"
brew_libpq: "{{ brew_prefix }}/opt/libpq"
brew_openssl: "{{ brew_prefix }}/opt/openssl@1.1"
brew_libpq_bin_path: "{{ brew_libpq }}/bin"
brew_libpq_include_path: "{{ brew_libpq }}/include"
brew_libpq_lib_path: "{{ brew_libpq }}/lib"
brew_openssl_include_path: "{{ brew_openssl }}/include"
brew_openssl_lib_path: "{{ brew_openssl }}/lib"
brew_libffi_pkgconfig_path: "{{ brew_prefix }}/opt/libffi/lib/pkgconfig"
brew_openblas_path: "{{ brew_prefix }}/opt/openblas"
macosx_deployment_target:
system_python_path: "{{ ansible_env.HOME }}/Library/Python/3.8/bin"
zprofile_path:
zshenv_path:
